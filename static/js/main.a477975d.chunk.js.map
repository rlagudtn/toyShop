{"version":3,"sources":["data.js","Detail.js","App.js","reportWebVitals.js","index.js"],"names":["id","title","content","price","박스","styled","div","제목","h4","props","색상","Stock","stock","Detail","useParams","history","useHistory","useState","alert","alertChange","value","value변경","useEffect","타이머","setTimeout","clearTimeout","item","items","find","e","className","onChange","target","src","parseInt","width","stocks","onClick","quantity","temp","재고변경","changeStock","push","Jumbotron","Button","variant","Card","order","alt","App","names","itemsChange","loading","재고","Navbar","bg","Container","Brand","href","Nav","Link","as","to","exact","path","map","i","console","log","axios","get","then","result","data","catch","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a477975d.chunk.js","sourcesContent":["export default\r\n[\r\n    {\r\n      id : 0,\r\n      title : \"White and Black\",\r\n      content : \"Born in France\",\r\n      price : 120000\r\n    },\r\n  \r\n    {\r\n      id : 1,\r\n      title : \"Red Knit\",\r\n      content : \"Born in Seoul\",\r\n      price : 110000\r\n    },\r\n  \r\n    {\r\n      id : 2,\r\n      title : \"Grey Yordan\",\r\n      content : \"Born in the States\",\r\n      price : 130000\r\n    },\r\n    {\r\n        id : 3,\r\n        title : \"Yello Yordan\",\r\n        content : \"Born in the States\",\r\n        price : 150000\r\n      }\r\n  ] ","import axios from 'axios';\r\nimport { props } from 'bluebird';\r\nimport React,{useEffect, useState} from 'react';\r\nimport { useHistory,useParams } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport './Detail.scss';\r\nlet 박스=styled.div`\r\n  padding:20px;\r\n`;\r\nlet 제목=styled.h4`\r\n  font-size:100px;\r\n  color: ${props=>props.색상}\r\n`;\r\n\r\nfunction Detail(props){\r\n    let { id }=useParams(); //{사용자가 입력한 url 파라미터들이 존재} 여러재면 {ㅇㅇ,ㅇㅇ,ㅇㅇ}\r\n    let history=useHistory();\r\n    let [alert,alertChange]=useState(true);\r\n    let [value,value변경]=useState('');\r\n    useEffect(()=>{ //Detail 컴포넌트 등장 시 실행할 코드\r\n      //컴포넌트가 mount 되었을 때 or 컴포넌트가 update 될 때 or 특정 코드를 실행할 수 있음\r\n      // axios.get();\r\n      let 타이머=setTimeout(()=>{alertChange(false)},2000);\r\n      return ()=>{clearTimeout(타이머)} //버그 염두한 코딩 ==>제거해주기\r\n      //컴포넌트가 사라질 때 코드를 실행시킬 수도 있음\r\n      // return function 어쩌구(){ 실행할 코드} or ()=>{}\r\n    },[alert]); //실행조건 alert 가 변경될 때만 변경 [ddd,ddd] 여러개 가능/ []==>로드가 되었을 때만 실행됨\r\n\r\n    useEffect(()=>{\r\n      //useEffect 가 적힌 순서대로 진행됨\r\n    });\r\n    let item=props.items.find((e)=>{return e.id==id});\r\n    function changeStock(quantity){\r\n      let temp=[...props.stocks];\r\n      temp[id]-=quantity;\r\n      props.재고변경(temp);\r\n    }\r\n    return(\r\n        <div className=\"container\">\r\n          <박스>\r\n            <제목 className=\"red\" 색상={'red'}>상세페이지</제목>\r\n          </박스>\r\n          <input  onChange={(e)=>{value변경(e.target.value)}}/>\r\n          {value}\r\n          {\r\n            \r\n            alert===true\r\n            ? <div className=\"my-alert-red\">\r\n              <p>재고가 얼마 남지 않았습니다</p>\r\n            </div>\r\n            :null\r\n          }\r\n          \r\n          <div className=\"row\">\r\n            <div className=\"col-md-6\">\r\n              <img src={\"https://codingapple1.github.io/shop/shoes\"+(parseInt(id)+1)+\".jpg\"} width=\"100%\" />\r\n            </div>\r\n            <div className=\"col-md-6 mt-4\">\r\n              <h4 className=\"pt-5\">{item.title}</h4>\r\n              <p>{item.content}</p>\r\n              <p>{item.price}</p>\r\n              <Stock stock={props.stocks[id]}></Stock>\r\n              <button className=\"btn btn-danger\" onClick={()=>{\r\n                changeStock(1);\r\n              }}>주문하기</button>\r\n              <button className=\"btn btn-danger\" onClick={()=>{\r\n                //   history.goBack();\r\n                  history.push('/'); \r\n              }}>뒤로가기</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction Stock(props){\r\n  return (\r\n    <div>\r\n      <p>재고 : {props.stock}</p>\r\n    </div>\r\n  )\r\n}\r\nexport default Detail;","/* eslint-disable */\nimport './App.css';\nimport {Navbar,Container,Nav,Button} from 'react-bootstrap';\nimport names from './data.js';\nimport { useEffect, useState } from 'react';\nimport {Route,Link,Switch} from 'react-router-dom';\nimport Detail from './Detail.js';\nimport axios from 'axios';\nfunction App() {\n  let [items,itemsChange]=useState(names);\n  let [loading,loadingChange]=useState(true);\n  let [재고,재고변경]=useState([10,11,12]);\n  return (\n    <div className=\"App\">\n      <Navbar bg=\"dark\" variant=\"dark\">\n        <Container>\n          <Navbar.Brand href=\"#home\">TennisShop</Navbar.Brand>\n          <Nav className=\"me-auto\">\n            <Nav.Link as={Link} to=\"/\">Home</Nav.Link>\n            <Nav.Link as={Link} to=\"/detail\">Detail</Nav.Link>\n            <Nav.Link href=\"#pricing\">Pricing</Nav.Link>\n          </Nav>\n        </Container>\n      </Navbar>\n      <Switch>\n        <Route exact path=\"/\">\n          <Jumbotron></Jumbotron>\n          <div className=\"container\">\n            <div className=\"row\">\n              {\n                items.map(function (item, i) {\n                  return (\n                    <Card item={item} order={i} key={i}></Card>\n                  )\n\n                })\n              }\n\n            </div>\n            <button className=\"btn btn-primary\" onClick={()=>{\n              //클릭하면 로딩중 띄워짐\n              {\n                loading===true\n                ? (\n                  console.log(\"로딩중입니다\")\n                )\n                :null \n              }\n              //로그인이나 검색 사용시 post 사용,, \n              // axios.post('서버URL',{id: 'djfk',pw:1234});\n              axios.get('https://codingapple1.github.io/shop/data2.json')\n              .then((result)=>{\n                //완료된것이므로 로딩중 삭제\n                console.log(\"로딩 완료되었습니다\")\n\n                itemsChange([...items,...result.data])  //js 리스트 합치기\n              })\n              .catch(()=>{\n                console.log('실패했어요');\n              })\n            }}>더보기</button>\n          </div>\n        </Route>\n\n        {/* 밑에 두개가 동시에 보여지므로 특정하나만 보여지게 하기 위해 Switch사용(택 1) */}\n        \n        <Route path=\"/detail/:id\"> \n          <Detail items={items} stocks={재고} 재고변경={재고변경}/>\n        </Route>\n        <Route path=\"/:id\">\n          <div>아무거나 적었을 때 이거 보여주세요</div>\n        </Route>\n        \n      </Switch>\n\n    </div>\n  );\n}\nfunction Jumbotron(){\n  return (\n    <div className=\"jumbotron\">\n      <h1>20% Season Off</h1>\n        <p>\n          This is a simple hero unit, a simple jumbotron-style component for calling\n          extra attention to featured content or information.\n        </p>\n        <p>\n          <Button variant=\"primary\">Learn more</Button>\n        </p>\n    </div>\n  );\n}\nfunction Card(props){\n  return (\n    <div className=\"col-md-4\">\n            <img src={\"https://codingapple1.github.io/shop/shoes\"+(props.order+1)+\".jpg\"}  width=\"100%\" alt=\"\" />\n            <h4>{props.item.title}</h4>\n            <p>{props.item.content}</p>\n          \n          </div>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}